<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License
-->
    <ModulePrefs title="Hangout Starter">
        <Require feature="rpc" />
        <Require feature="views" />
        <Require feature="locked-domain" />
    </ModulePrefs>
    <Content type="html"><![CDATA[

<html>
<style type="text/css">
<!--
.button {
  border-radius: 3px;
  -moz-border-radius: 3px;
  background: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#ddd));
  background: -moz-linear-gradient(top, #fff, #ddd);
  border: 1px solid #bbb;
}

.button:active {
    background: -webkit-gradient(linear, left top, left bottom, from(#aaa), to(#333));
    background: -moz-linear-gradient(bottom, #ddd, #aaa); }

-->
</style>
<body>

<script src="https://hangoutsapi.talkgadget.google.com/hangouts/api/hangout.js?v=1.4" ></script>
<script src="https://hanggammon.appspot.com/js/hangoutData.js"></script>
<script src="https://hanggammon.appspot.com/js/gameState.js"></script>
<script src="https://hanggammon.appspot.com/js/history.js"></script>
<script src="https://hanggammon.appspot.com/js/movement.js"></script>
<script src="https://hanggammon.appspot.com/js/dice.js"></script>
<script src="https://hanggammon.appspot.com/js/graphicalBoard.js"></script>
<script src="https://hanggammon.appspot.com/js/score.js"></script>
<script src="https://hanggammon.appspot.com/js/seedrandom.js"></script>

<!--
The following is for drawing SVG inside of an HTML5 canvas
-->
<script src="https://hanggammon.appspot.com/js/rgbcolor.js"></script>
<script src="https://hanggammon.appspot.com/js/StackBlur.js"></script>
<script src="https://hanggammon.appspot.com/js/canvg.js"></script>

<h3>HangGammon</h3>

<p>
    <input class="button" type="button" value="Reset Game" id="resetGameButton"
        onClick="resetGameState()" style="display:inline"/>
</p>


<p>
   <form name="scoreForm">
      <input class="button" type="button" value="Team0 +1" id="team0IncButton"
       onClick="team0ScoreInc()" style="display:inline"/>
      <input class="button" type="button" value="Team1 +1" id="team1IncButton"
       onClick="team1ScoreInc()" style="display:inline"/>
      <input class="button" type="button" value="Team0 -1" id="team0DecButton"
       onClick="team0ScoreDec()" style="display:inline"/>
      <input class="button" type="button" value="Team1 -1" id="team1DecButton"
       onClick="team1ScoreDec()" style="display:inline"/>
   </form>
</p>

<div id="stateDiv"></div>
<div id="started"></div>

<canvas id="board0" style="float:left"></canvas>
<form name="rollForm" style="float:left">
   <input class="button" type="button" value="Roll 'em" id="rollDiceButton" style="float:left"
    onClick="rollDiceTest()"/>
</form>
<span id="dice1"></span> 
<span id="dice2"></span> 
<canvas id="board1" style="float:left"></canvas>

<style type="text/css">
.scroll{
    display:block;
    border: 1px solid red;
    padding:5px;
    margin-top:5px;
    width:800px;
    height:100px;
    overflow:scroll;
    }
.auto{
    display:block;
    border: 1px solid red;
    padding:5px;
    margin-top:5px;
    width:800px;
    height:100px;
    overflow:auto;
    }
</style>
<div class="scroll" id="historyDiv"></div>
<script>

function rollDiceTest()
{
   rollDice();
}

function team0ScoreInc()
{
   incScore(0);
}

function team1ScoreInc()
{
   incScore(1);
}

function team0ScoreDec()
{
   decScore(0);
}

function team1ScoreDec()
{
   decScore(1);
}

function updateDisplayState()
{
   gameStateToDisplay();
   //var stateDiv = document.getElementById('stateDiv');
   //stateDiv.innerHTML = gameStateToString();

   var histDiv = document.getElementById('historyDiv');
   histDiv.innerHTML = "";
   var hist_len = parseInt(gapi.hangout.data.getValue("history_len"));
   for (var i = hist_len - 1; i < hist_len - 1 + 10; i++) {
      hist = gapi.hangout.data.getValue("history_" + (i % 10).toString());
      if (hist != undefined) {
          histDiv.innerHTML += hist;
      }
   }
   
   var dice1 = document.getElementById('dice1');
   dice1.innerHTML = gapi.hangout.data.getValue("dice0_value");
   //canvg('die1', '//hanggammon.appspot.com/img/die1.svg')

   var dice2 = document.getElementById('dice2');
   dice2.innerHTML = gapi.hangout.data.getValue("dice1_value");
   //canvg('die2', '//hanggammon.appspot.com/img/die2.svg')
}

// Sync state update coming from the server
function onStateChange(changeEvent)
{
   // sync the changes to gameState
   for (var updatedKey in changeEvent.state) {
      gameState[updatedKey] = changeEvent.state[updatedKey];
   }

   // Call method to update display state
   updateDisplayState();
}

function init() {
   // Calling Math.seedrandom() which will seed Math.random with hopefully a very good seed for the dice
   Math.seedrandom();

   // When API is ready...
   gapi.hangout.onApiReady.add(
      function(eventObj) {
         if (eventObj.isApiReady) {
            gapi.hangout.data.onStateChanged.add(onStateChange);

            initGameState();
            updateDisplayState();
         }
      }
   );

   initGraphicalBoardEventHandlers(); 
}

// Wait for gadget to load.
gadgets.util.registerOnLoadHandler(init);
</script>
</body>
]]>
</Content>
</Module>
