<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License
-->
    <ModulePrefs title="Hangout Starter">
        <Require feature="rpc" />
        <Require feature="views" />
        <Require feature="locked-domain" />
    </ModulePrefs>
    <Content type="html"><![CDATA[

<html>
<style type="text/css">
<!--
.button {
  border-radius: 3px;
  -moz-border-radius: 3px;
  background: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#ddd));
  background: -moz-linear-gradient(top, #fff, #ddd);
  border: 1px solid #bbb;
}

.button:active {
    background: -webkit-gradient(linear, left top, left bottom, from(#aaa), to(#333));
    background: -moz-linear-gradient(bottom, #ddd, #aaa); }

-->

body {
  margin: 0px;
  padding: 10px;
}

table {
  margin: 0px;
  padding: 0px;
}

.scroll{
  border: 1px solid black;
  height: 150px;
  overflow: scroll;
  text-align: left;
}
</style>
<body>

<script src="https://hangoutsapi.talkgadget.google.com/hangouts/api/hangout.js?v=1.4" ></script>
<script src="https://hanggammon.appspot.com/js/hangoutData.js"></script>
<script src="https://hanggammon.appspot.com/js/gameState.js"></script>
<script src="https://hanggammon.appspot.com/js/history.js"></script>
<script src="https://hanggammon.appspot.com/js/movement.js"></script>
<script src="https://hanggammon.appspot.com/js/dice.js"></script>
<script src="https://hanggammon.appspot.com/js/graphicalBoard.js"></script>
<script src="https://hanggammon.appspot.com/js/player.js"></script>
<script src="https://hanggammon.appspot.com/js/score.js"></script>
<script src="https://hanggammon.appspot.com/js/seedrandom.js"></script>

<span id="title" style="font-size:36px; font-weight:bold; margin:10px;">HangGammon</span>

<input class="button" type="button" value="Reset Game" id="resetGameButton" onClick="resetGameState()" style="display:inline"/>
<input class="button" type="button" value="Team0 +1" id="team0IncButton" onClick="team0ScoreInc()" style="display:inline"/>
<input class="button" type="button" value="Team1 +1" id="team1IncButton" onClick="team1ScoreInc()" style="display:inline"/>
<input class="button" type="button" value="Team0 -1" id="team0DecButton" onClick="team0ScoreDec()" style="display:inline"/>
<input class="button" type="button" value="Team1 -1" id="team1DecButton" onClick="team1ScoreDec()" style="display:inline"/>
<input class="button" type="button" value="Flip boards" id="flipBoardButton" onClick="flipBoardClicked()" style="display:inline"/>

<div id="stateDiv"></div>
<div id="started"></div>

<div id="horizontalSeparator" style="width:100%; height:1px; background-color:black; margin-top:10px; margin-bottom:10px;"></div>

<table style="width:100%">
  <tr style="width:100%">
    <td style="vertical-align:middle; text-align:center;">
      <form name="board0top" style="margin:10px">
        <input class="button" type="button" value="Take Seat" id="board0TopSeatButton"
         onclick="board0TakeTopSeat()" style="display:inline"/>
      </form>
      <div id="board0TopSeatName" style="margin:10px">Board0TopSeat</div>
      <canvas id="board0" style="border-width:1px; border-color:purple; border-style:solid;"></canvas>
      <div id="board0BottomSeatName" style="margin: 10px">Board0BottomSeat</div>
      <form name="board0bottom" style="margin:10px">
        <input class="button" type="button" value="Take Seat" id="board0BottomSeatButton"
         onclick="board0TakeBottomSeat()"/>
      </form>
    </td>
    <td style="width:172px; vertical-align:middle; text-align:center;">
      <form name="rollForm">
        <input class="button" type="button" value="Roll 'em" id="rollDiceButton" onClick="rollDiceTest()"/>
      </form>
      <div id="diceValues">
        <img id="dice1" src="//hanggammon.appspot.com/img/die1.png">
        <img id="dice2" src="//hanggammon.appspot.com/img/die2.png">
      </div>
    </td>
    <td style="vertical-align:middle; text-align:center;">
      <form name="board1top" style="margin:10px">
        <input class="button" type="button" value="Take Seat" id="board1TopSeatButton"
         onclick="board1TakeTopSeat()" style="display:inline"/>
      </form>
      <div id="board1TopSeatName" style="margin:10px">Board1TopSeat</div>
      <canvas id="board1" style="border-width:1px; border-color:purple; border-style:solid;"></canvas>
      <div id="board1BottomSeatName" style="margin: 10px">Board1BottomSeat</div>
      <form name="board1bottom" style="margin:10px">
        <input class="button" type="button" value="Take Seat" id="board1BottomSeatButton"
         onclick="board1TakeBottomSeat()"/>
      </form>
    </td>
  </tr>
  <tr>
    <td>
      <div class="scroll" id="historyDiv0"></div>
    </td>
    <td>
    </td>
    <td>
      <div class="scroll" id="historyDiv1"></div>
    </td>
  </tr>
</table>

<script>

function rollDiceTest()
{
   rollDice();
}

function team0ScoreInc()
{
   incScore(0);
}

function team1ScoreInc()
{
   incScore(1);
}

function team0ScoreDec()
{
   decScore(0);
}

function team1ScoreDec()
{
   decScore(1);
}

function flipBoardClicked()
{
   flipBoard();
   updateDisplayState();
}

// Sync state update coming from the server
function onStateChange(changeEvent)
{
   // sync the changes to gameState
   for (var updatedKey in changeEvent.state) {
      gameState[updatedKey] = changeEvent.state[updatedKey];
   }
   
   updateDisplayState();
}

function onMessageReceived(messageReceivedEvent)
{
  var board = messageReceivedEvent.message.substring(0, 1)
  var message = messageReceivedEvent.message.substring(1)
  histdiv_add(board, message);
}

function updateDisplayState()
{
   boardStateToDisplay();
   //var stateDiv = document.getElementById('stateDiv');
   //stateDiv.innerHTML = gameStateToString();

   var diceLeftValue = gameState[getDiceValueKey(0)];
   var diceLeft = document.getElementById('dice1');
   diceLeft.src = "//hanggammon.appspot.com/img/die" + diceLeftValue + ".png";

   var diceRightValue = gameState[getDiceValueKey(1)];
   var diceRight = document.getElementById('dice2');
   diceRight.src = "//hanggammon.appspot.com/img/die" + diceRightValue + ".png";

   playerStateToDisplay();
}

function init() {
   // Calling Math.seedrandom() which will seed Math.random with hopefully a very good seed for the dice
   Math.seedrandom();

   // When API is ready...
   gapi.hangout.onApiReady.add(
      function(eventObj) {
         if (eventObj.isApiReady) {
            initGameState();
            updateDisplayState();

            gapi.hangout.data.onStateChanged.add(onStateChange);

            gapi.hangout.data.onMessageReceived.add(onMessageReceived);
         }
      }
   );

   initGraphicalBoardEventHandlers(); 
}

// Wait for gadget to load.
gadgets.util.registerOnLoadHandler(init);
</script>
</body>
</html>
]]>
</Content>
</Module>
