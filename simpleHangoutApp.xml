<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License
-->
    <ModulePrefs title="Hangout Starter">
        <Require feature="rpc" />
        <Require feature="views" />
        <Require feature="locked-domain" />
    </ModulePrefs>
    <Content type="html"><![CDATA[

<html>
<style type="text/css">
<!--
.button {
  border-radius: 3px;
  -moz-border-radius: 3px;
  background: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#ddd));
  background: -moz-linear-gradient(top, #fff, #ddd);
  border: 1px solid #bbb;
}

.button:active {
    background: -webkit-gradient(linear, left top, left bottom, from(#aaa), to(#333));
    background: -moz-linear-gradient(bottom, #ddd, #aaa); }

-->
</style>
<body>

<script src="https://hangoutsapi.talkgadget.google.com/hangouts/api/hangout.js?v=1.4" ></script>

<h3>HangGammon served on collabedit hello world</h3>

<div id=scoreboard><center>0 : 0</center></div>
<div id=scoreboard_buttons><input class="button" type="button" value="-"
     id="leftScoreMinus" style="visibility:hidden;"

<p>

<input class="button" type="button" value="Show participants!" id="showParticipants"
    style="visibility:hidden;"
    onClick="showParticipants()"/>

    <input class="button" type="button" value="One!" id="oneButton"
    style="visibility:hidden;"
    onClick="oneButton()"/>

    <input class="button" type="button" value="Two!" id="twoButton"
    style="visibility:hidden;"
    onClick="twoButton()"/>

    <input class="button" type="button" value="Three!" id="threeButton"
    style="visibility:hidden;"
    onClick="threeButton()"/>

    <input class="button" type="button" value="Four!" id="fourButton"
    style="visibility:hidden;"
    onClick="fourButton()"/>
</p>

<div id="participantsDiv"></div>

<div id="stateDiv"></div>

<canvas id="myCanvas" width="200" height="100"></canvas>

<hr>

<div id="owner">Nobody</div>

<p>
    <input class="button" type="button" value="Change owner" id="ownerButton"
    style="visibility:hidden;"
    onClick="updateOwner()"/>
</p>

<script>
function showParticipants() {
  var participants = gapi.hangout.getParticipants();

  var retVal = '<p>Participants: </p><ul>';

  for (var index in participants) {
    var participant = participants[index];

    if (!participant.person) {
      retVal += '<li>A participant not running this app</li>';
    }
    retVal += '<li>' + participant.person.displayName + '</li>';
  }

  retVal += '</ul>';

  var div = document.getElementById('participantsDiv');

  div.innerHTML = retVal;
}

function getLocalDisplayName() {
  return gapi.hangout.getLocalParticipant().person.displayName;
}

function oneButton() {
  gapi.hangout.data.setValue('state',getLocalDisplayName() + ' changed state to: One');
}

function twoButton() {
  gapi.hangout.data.setValue('state',getLocalDisplayName() + ' changed state to: Two');
}

function threeButton() {
  gapi.hangout.data.setValue('state',getLocalDisplayName() + ' changed state to: Three');
}

function fourButton() {
  gapi.hangout.data.setValue('state',getLocalDisplayName() + ' changed state to: Four');
}

function updateOwner() {
  gapi.hangout.data.setValue('owner', getLocalDisplayName());
}

function showStateButton() {
  var stateDiv = document.getElementById('stateDiv');
  stateDiv.innerHTML = gapi.hangout.data.getValue("state");
}

function updateOwnerState() {
  document.getElementById('owner').innerHTML = gapi.hangout.data.getValue('owner');
}

function onStateChange() {
  var stateDiv = document.getElementById('stateDiv');
  stateDiv.innerHTML = gapi.hangout.data.getValue('state');
  updateOwnerState();
}

function initOwner() {
  currentOwner = gapi.hangout.data.getValue('owner');
  if (currentOwner == 'undefined') {
    currentOwner = getLocalDisplayName();
    gapi.hangout.data.setValue('owner', currentOwner);
  }
  updateOwnerState();
}

function init() {
  // When API is ready...
  gapi.hangout.onApiReady.add(
      function(eventObj) {
        if (eventObj.isApiReady) {
          document.getElementById('showParticipants')
            .style.visibility = 'visible';
          document.getElementById('oneButton')
            .style.visibility = 'visible';
          document.getElementById('twoButton')
            .style.visibility = 'visible';
          document.getElementById('threeButton')
            .style.visibility = 'visible';
          document.getElementById('fourButton')
            .style.visibility = 'visible';
          document.getElementById('ownerButton')
            .style.visibility = 'visible';

          gapi.hangout.data.onStateChanged.add(onStateChange);
          // onStateChange doesn't get called until a button gets pressed
          // so We have to call it here once to get into an initialized state
          initOwner();
          onStateChange();

          var c=document.getElementById('myCanvas');
          var ctx=c.getContext('2d');
          ctx.fillStyle="#FF0000";
          ctx.fillRect(0,0,150,75);
          ctx.moveTo(0,0);
          ctx.lineTo(200,100);
          ctx.stroke();
                var centerX = c.width / 2;
      var centerY = c.height / 2;
      var radius = 20;

      ctx.beginPath();
      ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);
      ctx.fillStyle = 'green';
      ctx.fill();
      ctx.lineWidth = 5;
      ctx.strokeStyle = '#003300';
      ctx.stroke();

        }
      });
}

// Wait for gadget to load.
gadgets.util.registerOnLoadHandler(init);
</script>
</body>
]]>
</Content>
</Module>
