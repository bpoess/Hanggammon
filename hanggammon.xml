<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License
-->
    <ModulePrefs title="Hangout Starter">
        <Require feature="rpc" />
        <Require feature="views" />
        <Require feature="locked-domain" />
    </ModulePrefs>
    <Content type="html"><![CDATA[

<html>
<style type="text/css">
<!--
.button {
  border-radius: 3px;
  -moz-border-radius: 3px;
  background: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#ddd));
  background: -moz-linear-gradient(top, #fff, #ddd);
  border: 1px solid #bbb;
}

.button:active {
    background: -webkit-gradient(linear, left top, left bottom, from(#aaa), to(#333));
    background: -moz-linear-gradient(bottom, #ddd, #aaa); }

-->
</style>
<body>

<script src="https://hangoutsapi.talkgadget.google.com/hangouts/api/hangout.js?v=1.4" ></script>
<script src="http://bpoess.github.io/Hanggammon/src/gameState.js"></script>
<script src="http://bpoess.github.io/Hanggammon/src/hangoutData.js"></script>
<script src="http://bpoess.github.io/Hanggammon/src/movement.js"></script>

<h3>HangGammon</h3>

<p>
   From board: <input type="text" name="moveBoardText" value="0"><br>
   Team:       <input type="text" name="moveTeamText" value="0"><br>
   From slot:  <input type="text" name="moveFromSlotText" value="0"><br>
   To slot:    <input type="text" name="moveToSlotText" value="3"><br>
   <input class="button" type="button" value="Move piece!" id="movePieceButton"
    onClick="movePieceTest()"/>
</p>

<div id="stateDiv"></div>

<script>

function movePieceTest()
{
   movePiece(document.moveBoardText.value,
             document.moveTeamText.value,
             document.moveFromSlotText.value,
             document.moveToSlotText.value);
}

function updateDisplayState()
{
   var stateDiv = document.getElementById('stateDiv');
   stateDiv.innerHTML = gameStateToString();
}

// Sync state update coming from the server
function onStateChange(changeEvent)
{
   // sync the changes to gameState
   for (var updatedKey in changeEvent.state) {
      gameState[updatedKey] = changeEvent.state[updatedKey];
   }

   // Call method to update display state
   updateDisplayState();
}

function init() {
   // When API is ready...
   gapi.hangout.onApiReady.add(
      function(eventObj) {
         if (eventObj.isApiReady) {
            gapi.hangout.data.onStateChanged.add(onStateChange);

            initGameState();
            updateDisplayState();
         }
      }
   );
}

// Wait for gadget to load.
gadgets.util.registerOnLoadHandler(init);
</script>
</body>
]]>
</Content>
</Module>
